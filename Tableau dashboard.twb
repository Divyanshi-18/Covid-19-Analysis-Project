<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='worldometer_coronavirus_summary_data' inline='true' name='federated.14g9lsu1qcjnc01awj5rc1ga6sx8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='worldometer_coronavirus_summary_data' name='textscan.0klekrx1ycfc8318swruj17cd9mp'>
            <connection class='textscan' directory='C:/Users/divya/Downloads' filename='worldometer_coronavirus_summary_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0klekrx1ycfc8318swruj17cd9mp' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='integer' name='total_confirmed' ordinal='2' />
            <column datatype='real' name='total_deaths' ordinal='3' />
            <column datatype='real' name='total_recovered' ordinal='4' />
            <column datatype='real' name='active_cases' ordinal='5' />
            <column datatype='real' name='serious_or_critical' ordinal='6' />
            <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
            <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
            <column datatype='real' name='total_tests' ordinal='9' />
            <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
            <column datatype='integer' name='population' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_confirmed]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_recovered]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_recovered</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serious_or_critical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[serious_or_critical]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>serious_or_critical</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_1m_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_cases_per_1m_population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_1m_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths_per_1m_population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_1m_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests_per_1m_population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='worldometer_coronavirus_summary_data.csv' datatype='table' name='[__tableau_internal_object_id__].[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Serious Or Critical' datatype='real' name='[serious_or_critical]' role='measure' type='quantitative' />
      <column caption='Total Cases Per 1M Population' datatype='integer' name='[total_cases_per_1m_population]' role='measure' type='quantitative' />
      <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per 1M Population' datatype='real' name='[total_deaths_per_1m_population]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per 1M Population' datatype='real' name='[total_tests_per_1m_population]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/divya/AppData/Local/Temp/TableauTemp/#TableauTemp_0jie2i504ohpd4142uodt093vj48.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/23/2025 10:21:17 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_confirmed</remote-alias>
              <ordinal>2</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>3</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>212</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_recovered</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_recovered</remote-alias>
              <ordinal>4</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>204</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>active_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[active_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>active_cases</remote-alias>
              <ordinal>5</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>193</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>serious_or_critical</remote-name>
              <remote-type>5</remote-type>
              <local-name>[serious_or_critical]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>serious_or_critical</remote-alias>
              <ordinal>6</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_1m_population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases_per_1m_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases_per_1m_population</remote-alias>
              <ordinal>7</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_1m_population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_1m_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths_per_1m_population</remote-alias>
              <ordinal>8</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>206</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests</remote-alias>
              <ordinal>9</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests_per_1m_population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests_per_1m_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests_per_1m_population</remote-alias>
              <ordinal>10</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>11</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia And Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China Macao Sar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Pierre And Miquelon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands Malvinas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts And Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallis And Futuna Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic Of The Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sao Tome And Principe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua And Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Vincent And The Grenadines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;State Of Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle Of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote D Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turks And Caicos Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China Hong Kong Sar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='worldometer_coronavirus_summary_data.csv' id='worldometer_coronavirus_summary_data.csv_75AB293C63B94A3A9EBDAEC91AC1D067'>
            <properties context=''>
              <relation connection='textscan.0klekrx1ycfc8318swruj17cd9mp' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='integer' name='total_confirmed' ordinal='2' />
                  <column datatype='real' name='total_deaths' ordinal='3' />
                  <column datatype='real' name='total_recovered' ordinal='4' />
                  <column datatype='real' name='active_cases' ordinal='5' />
                  <column datatype='real' name='serious_or_critical' ordinal='6' />
                  <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
                  <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
                  <column datatype='real' name='total_tests' ordinal='9' />
                  <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
                  <column datatype='integer' name='population' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Confirmed vs Death'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Confirmed vs Death</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.14g9lsu1qcjnc01awj5rc1ga6sx8' />
          </datasources>
          <datasource-dependencies datasource='federated.14g9lsu1qcjnc01awj5rc1ga6sx8'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' />
              <size column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]</rows>
        <cols>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</cols>
      </table>
      <simple-id uuid='{C5258D07-91E6-45DD-B8A8-0128B0224CC1}' />
    </worksheet>
    <worksheet name='Death Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Top 10 Death Cases</run>
            <run>Ã†&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.14g9lsu1qcjnc01awj5rc1ga6sx8' />
          </datasources>
          <datasource-dependencies datasource='federated.14g9lsu1qcjnc01awj5rc1ga6sx8'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]' />
              <color column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]' />
              <text column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' />
              <text column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0F4C705A-F4D2-4317-8759-A82FC9812EB3}' />
    </worksheet>
    <worksheet name='Dual Axis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Dual Axis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.14g9lsu1qcjnc01awj5rc1ga6sx8' />
          </datasources>
          <datasource-dependencies datasource='federated.14g9lsu1qcjnc01awj5rc1ga6sx8'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_recovered]' derivation='Sum' name='[sum:total_recovered:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_recovered:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' />
              <color column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' />
              <color column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' />
              <color column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_recovered:qk] + [federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk])</rows>
        <cols>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{9CF23627-A622-42B7-9F81-D118092700AD}' />
    </worksheet>
    <worksheet name='Global Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.14g9lsu1qcjnc01awj5rc1ga6sx8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14g9lsu1qcjnc01awj5rc1ga6sx8'>
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[Longitude (generated)]' field-type='quantitative' max='28995872.2731058' min='-16879432.502014823' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[Latitude (generated)]' field-type='quantitative' max='24686638.061662506' min='-25429243.586058971' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]' />
              <lod column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' />
              <lod column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:active_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[Latitude (generated)]</rows>
        <cols>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A3803D45-01C5-44E6-8485-DE7BE8F7CC45}' />
    </worksheet>
    <worksheet name='Mortality Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Mortality Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.14g9lsu1qcjnc01awj5rc1ga6sx8' />
          </datasources>
          <datasource-dependencies datasource='federated.14g9lsu1qcjnc01awj5rc1ga6sx8'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths_per_1m_population]' derivation='Sum' name='[sum:total_deaths_per_1m_population:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths Per 1M Population' datatype='real' name='[total_deaths_per_1m_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths_per_1m_population:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</rows>
        <cols>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths_per_1m_population:qk]</cols>
      </table>
      <simple-id uuid='{5C72FC8A-20A3-417F-898B-87498E13214B}' />
    </worksheet>
    <worksheet name='Recovery Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Top 10 Recoveries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.14g9lsu1qcjnc01awj5rc1ga6sx8' />
          </datasources>
          <datasource-dependencies datasource='federated.14g9lsu1qcjnc01awj5rc1ga6sx8'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_recovered]' derivation='Sum' name='[sum:total_recovered:qk]' pivot='key' type='quantitative' />
            <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([total_recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' />
              <size column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_recovered:qk]' />
              <text column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9A6BD2D6-D37E-4B83-988B-C10CF0C41A8F}' />
    </worksheet>
    <worksheet name='Top 10 Confirmed Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Top 10 Confirmed Countries</run>
            <run>Ã†&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.14g9lsu1qcjnc01awj5rc1ga6sx8' />
          </datasources>
          <datasource-dependencies datasource='federated.14g9lsu1qcjnc01awj5rc1ga6sx8'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</rows>
        <cols>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{844283EA-2E45-4145-860E-3EED075E05A3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='worldometer_coronavirus_summary_data' name='federated.14g9lsu1qcjnc01awj5rc1ga6sx8' />
      </datasources>
      <datasource-dependencies datasource='federated.14g9lsu1qcjnc01awj5rc1ga6sx8'>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='12' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='9' param='horz' type-v2='layout-flow' w='89378' x='483' y='999'>
              <zone h='98002' id='7' type-v2='layout-basic' w='89378' x='483' y='999'>
                <zone h='49001' id='3' name='Global Cases' w='25468' x='38443' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49001' id='5' name='Top 10 Confirmed Cases' w='37960' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49001' id='10' name='Death Cases' w='34399' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49001' id='14' name='Recovery Cases' w='22209' x='34882' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49001' id='16' name='Confirmed vs Death' w='32770' x='57091' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49001' id='19' name='Dual Axis' w='25950' x='63911' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98002' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='999'>
              <zone h='9114' id='13' name='Death Cases' pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]' type-v2='color' w='9656' x='89861' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29963' id='15' name='Recovery Cases' pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' type-v2='color' w='9656' x='89861' y='10113'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33082' id='17' name='Confirmed vs Death' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' type-v2='filter' w='9656' x='89861' y='40076'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16854' id='18' name='Confirmed vs Death' pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]' type-v2='size' w='9656' x='89861' y='73158'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8989' id='20' name='Dual Axis' pane-specification-id='1' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[:Measure Names]' type-v2='color' w='9656' x='89861' y='90012'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='21' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone fixed-size='280' h='49001' id='5' is-fixed='true' name='Top 10 Confirmed Cases' w='37960' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49001' id='3' is-fixed='true' name='Global Cases' w='25468' x='38443' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49001' id='19' is-fixed='true' name='Dual Axis' w='25950' x='63911' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8989' id='20' name='Dual Axis' pane-specification-id='1' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[:Measure Names]' type-v2='color' w='9656' x='89861' y='90012'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49001' id='10' is-fixed='true' name='Death Cases' w='34399' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9114' id='13' name='Death Cases' pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]' type-v2='color' w='9656' x='89861' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49001' id='14' is-fixed='true' name='Recovery Cases' w='22209' x='34882' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='29963' id='15' name='Recovery Cases' pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' type-v2='color' w='9656' x='89861' y='10113'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='33082' id='17' mode='checkdropdown' name='Confirmed vs Death' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' type-v2='filter' w='9656' x='89861' y='40076'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49001' id='16' is-fixed='true' name='Confirmed vs Death' w='32770' x='57091' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16854' id='18' name='Confirmed vs Death' pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]' type-v2='size' w='9656' x='89861' y='73158'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B6C6F975-675D-4D41-B00C-F4431B17DF4D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top 10 Confirmed Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Turkey&quot;</value>
                <value>15053168</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Italy&quot;</value>
                <value>17057873</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;South Korea&quot;</value>
                <value>17782061</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Russia&quot;</value>
                <value>18260293</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;UK&quot;</value>
                <value>22159805</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Germany&quot;</value>
                <value>25780226</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;France&quot;</value>
                <value>29160802</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brazil&quot;</value>
                <value>30682094</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;India&quot;</value>
                <value>43121599</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
                  <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;USA&quot;</value>
                <value>84209473</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00269FC2-1621-4A03-9A62-D7F4EF8632B9}' />
    </window>
    <window class='worksheet' name='Global Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F699CA3-E77E-441F-8163-515D57E3613C}' />
    </window>
    <window class='worksheet' name='Death Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{707BBAD3-62D4-404C-9F98-15539125E7D3}' />
    </window>
    <window class='worksheet' name='Recovery Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6173488-8063-4949-A086-D637177B2F0B}' />
    </window>
    <window class='worksheet' name='Confirmed vs Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32F626E5-8124-49F9-9635-B9E2B885FF17}' />
    </window>
    <window class='worksheet' name='Mortality Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{552D430D-0ABA-445A-AE1F-AB4FD3C99A68}' />
    </window>
    <window class='worksheet' name='Dual Axis'>
      <cards>
        <edge name='left'>
          <strip size='167'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[sum:total_deaths:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{956BEDF8-4BC1-4BFE-8860-0B3A3BC58D4F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Confirmed vs Death'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death Cases' />
        <viewpoint name='Dual Axis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recovery Cases'>
          <highlight>
            <color-one-way>
              <field>[federated.14g9lsu1qcjnc01awj5rc1ga6sx8].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 Confirmed Cases'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{EFC1EE10-2315-4041-B6F7-56515DEA7F1F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Confirmed vs Death' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d3hc532g+54yvc9g0DsBgr1JIiWr2JJcE5fYTryJN7Z3bWdjO83Z3Psk
      N9mU3SS+ucmT5CYbx4lbrOs4sWWn2LFsS1YXKZGixCIWAATROwaYXk+9f4AEG4YYkCgkcd7n
      4UPMnK+dM9/vfO1XBNM0TSwsNijiejfAwmI9sQTAYkNjCYDFhsYSAIsNjSUAFhuaSwJgmnSf
      Ps7Ro0c5evQoE7FERQUYusL4xNSFIgz6uk8zMRNnYWvJNMkkYhw7doJcUV2yrB/+++O8/sZZ
      fvj0czdyPwCcO/kasUzxYgNIzU1x7PhJCoq2rHJMw+DqTbKh7mP0DE3fcNssrsQ0TabHh3n9
      2AnyJY3ExABnBiauSmNw8NDLZcs4/sohctql8hKxCY6deIOSqi9Z/xUjgCTJvPjE40ykDURB
      wDRNjAud4OLf85/n0+fnRvg/f+OzfOmfnwDg+e/+I4fPjvFPX/obRmazAMRGzvKXf/d1NK3E
      2GRskTIvfZ7qe53BrIe92zrpbG+7ot75vy/WP///xRu+uo3n3jhGLFMCYKz3dT7/D99BV/JM
      TMWvSb+Q70L5l1//qz/9HMmSunDdMAyC0Tqqgp4r0sG1z8aiMl7+0eP8y1OHMbQCx06eITk5
      SPfgxJXP1zR55fDhRfsiwMlXXyF/oa8PnX6Fv//H76GVskzGEmX6sInJvGDJCy0RBDZv3UlT
      bZQtO3ZTE5b427/4f5DcXpyRNu5rFPjnl/pwqwnueefP8fDdXdi9UX7/f/42f/flJwGT104P
      88u/81EGX9Y4+sY5Wh7Zx/NP/5if/sjH2dYYBNPk21//IrGcQclw8F8/9BB//Cdfo7M9jFy9
      FffsSc6cz3F8VzM/+P5TfPrnHuEvvvTvmM4A+9vcjBbsjPaeZsfefZw53cPv/Pb/wZe/8AVs
      dpmdD7wbZ7KHl06NkhoboP3R+dv68VPP8vMf/2Waw24wTb7x5f9NWrehSX4+8EAHz/cVee/d
      1fzj8+epzvUTs0cZOX2cD3/yFznd3cs3HvsaH3jHQ/zlF7+BipOPvm07s+4dCJNH6JlIo+Lk
      I++6i8//4w+oq47y4Y9/Ap9tbTvR7cyzr/bw27/3Pzhz7BihqiqYnQXg1We+y6HuCQqZLL/0
      67/O3OQQX/+HLzJdcPJLP/sI3/jXHzE9PsrPfPLXryjvx08+y8c+9VvUeWXA5KnvfpvB8SkM
      byMPdHp54uVuqmsa+NB7HuBvPv/V8muA4sx5lNAWPvWpX2Jy4BQAd93/CJ/97Cc58cqrAMgO
      Fw758iLMBYkFYf4rQcC48Fo0lCz9MZXPfPrTVMkJJpMKHdv38rGPfIRMYoo33X8v+x98O3dt
      a18o0RFq4o9/99eRkHn7ez7Azk0NvOVd72dLc5iRc29wfjKFw27jxRcPcvjYOX7l136FN+3b
      dlmbLtVPaY6RrItPf+rTyPkJ0qWrp2QS73jvB3l0/2ZUR5Sd27bwkf/6cSJuCdNZxZ//8W8j
      XrjdZ59/Cbsk0ff6q+QdATwOEQ0R0TSW+s0tFkE2M3zjW99f+Pzc0W5+/Vc+w9vubuW100NE
      6lr52Md/ESMzQbZQoFgsIRlF+obHryxIAOPCz20aOql0ClOU6T93jmA4imioiJJE3/EjTGe1
      8gLgiDSRHT3FSy8+g+SOANB39hT/9vi/0b5rJwDpuWlee/0k01NjnD03xP5d7Xzr8f/g+88d
      Y//uzQA8/Na3869f/wovHzrI2cEZPGaG5154kZFZjSq/fckH09LaiigIi14L1bbQUB1h1779
      vO2h/VQHbTz14+c43dO/kObt73iUb3z1K7x86EW6x3M4itO88OILzBUkgl43/T2neeHgYfRF
      pi4hr52DB18mqxg0tbQiXdaOzZ2dtHZu4b0/9T5Qiuy++17M5DBDseyS92RxiYfv3sznv/JN
      UrkCgigtfL+5PsD3nnyOF4/20NVeT3puioMvPI0q+zl38lX89R3UR8PXlPeOd76Vx7749xw6
      +AI95wc40zfO1s5NOGwSRcVg/733Md57DE9dO9FwGOFqVYjY5BieSD1uu0ghm6RvaIKtW7cw
      cORHHBqHB+/eSWdbEwCZxCznh0YB8ASq6GxrZOh8L+5QLTVVwYUyc6k4/SMTdGzuwiHodPf2
      0dKxGbdsMBPPURMJMBmLE/E7SRWhJuxlZGySumiQeEajJhpkbmYKV7CKzNwUgao6krNTRKrr
      KaRnGRydpmNzFy7ZpLf3PIFggGC0BrddvtDOGINjM2ze0oVkKPSc62fT5i247TL9fT34w1E0
      Q8BmlPBW1VJMziB7q3AKCt29/XR0biKeLtBQEyGbmkMV3QQ9Mj1ne/BGammsjTDQ14voCtLW
      VLfyveQOZ2psiFgyz+auLsxShqwmEQl4ON9zlkBNM9GQj9j0BNOxBJ1btuKQTHq6e6iurga7
      By2bIFzXiO3C6zw1N83I5Bybt3SRmhmniAPR0KmvreJcby/+aAP11WHiMxPXCkA55sbOEzf9
      dDZVr+azsLBYUyoWAAuLOxHrIMxiQyMvncTCYnXQNA1dX/qwajWxBGAlMU1mp8fJajKtjbWL
      JjEMA0EQKbOxtaEwDAO73Y6wjg/DEoAVxFRTvHy8n7c/fIDuN45RFFy47SIOIKeXSCYLpMd6
      iOx8CCk1SrYIu+7aQ3wuy6bW+vVu/obEEoCVRCsh2t3Y7TaGJmbmVSsM8JswK5r4AG84SmtL
      I8//8CTveeRuvvWtf+GRD/zserd8w2IJwAoiuKrprJnk3OAYm5rrKeLCJRSJzebYVl+FAwgG
      3YyOjrJvz26cgVrcAR/NYdd6N33DsqrboIZhIIrWRlM5itkUeUMm7Pesd1PWBUVRsNlsd+4a
      wDpiuD5ObwDnejdig7MmUyBNVzFZWhhkcX3fBhYbjzURgN9+4jcYS44sme4vfupvqfVbuyEW
      a8cNCYBp6HSfOQ12D147pLIKEb8TzeHHqaZJ4aLTUgqzuA244RGgVCphmjJOm5OmKgejSQmH
      nkHVSgh2GV3XL7PoqaxMXdfRtOWZLVrcfgiCgCRJSydcA25wBNAwETENA0MtMphUCYfDCGgo
      ds8VNyhJ0oJtzFJIkoQsWzuzFmvHDfU2UXaw7+67V7otFhZrzqKb9KZpWlMRiw3BogKg6zqP
      PfaYJQQWdzxlj2k1TeOxxx5jbGxsLdtjYbGmLLoGEEWRAwcOAJBIJGhsbFzTRllYrDYX/QSV
      FYA9e/asdZssLNYE0zRRFAW73b64AJimwbP/8S1mNS9Op5v3/cSja91GC4tVwTAMisUiDocD
      0zQXXwMIgsibHrgfu82OaVgLYYs7C1EUyefzFIvF8ucANpcfE5N9O7auZdssLFYVRVEQRRGn
      04ksy+UFQMmnmJqc4JgALa0tV140TSbGh9FFF05RI55ViPqc6A4vDi1H2rDTWH2t1y4Li/XE
      NE0KhQKSJGGz2dA0rbwASHY3jXU1BKuudYRlGCpDw6NU17egGCpRJ0wmS8j2ErKax7R70fWA
      pQtksSgrrQt00euzJEkLf6uqis1mu8Ygy+v1omkaxeK8+/yyAmCqOfIKhBfR4xEEEX8wjFrK
      I2KS0kwckgfBKGHKDgBLF8hiTbloR6LrOolEAl3XFwTtotXZRaGQZRlRFDEMo7wAqKUiVXUN
      1NZErq1MlGlrbkAxbXjskM5r+D1ORMFEMyUqfuVbWKwQ8XicQCAAXNrjv6jSUygUsNnmfdZf
      FAybzXZ9AZAcfnxODbnMUOXxBbloyVp1mV2f9f62WA88Hg+qOu/uXrgQ3GUxRFHENE1KpRKC
      IJRXhRAwOHr4ZfoveH+2sLhVEQQBl8uFy+XCZrMtdH5RFBemRhejySiKgqnriCOjiOW2QU3T
      oPf8APW1VSjq9eN6WVjcKlzs7Bfn/m63G1EUyWQyV2yumK8cpvitx5E2tZeZsZgmmfgUOw+8
      jWq/Fe/H4vZBlmVCoRCKouByuRZGh5mZmYWRQXDYQRQRnK7FBUAQRGrrm5kc6acQ8LNr2+Y1
      vQkLi5tBFEXcbvcVn8PhMPF4fD5I3r59uDdtwvB6y6wBBIH6mghTM3OkMlbIH4vbB0EQFnXG
      ZrPZ8Pv9wPx6QA8GwWYrvwgWHR6KqVly+WK5JBYWtw0Xp0KSJC0clF33JNjUFYJVtWhKYS3b
      ucBcbpbBuf4l00W91bSE29agRRa3O5fv/wPIajkBME1s3mrCniHc4cX9+6iFDEOTCYJukXhG
      Jep3oDl8ONUsKdNB003qAp2dOsUXDv3Vkuke7nwbv3DfL91UXRYbhyumR6Mj5bdBT5zu5oGH
      3szRo68uen14bBLDFEjnRKIumEwqyPa5FdMFuiilS2EZ8N9+rKdfIK/Xi6Io6LqO2dpafhdI
      UnM88YMfUN3Ucc11U1colUrMxJLU1lWRVA0cNu+K6gJV6lVaEARLf8iiYmRZxu/3k0gk0Cin
      uSAI7Lv3obKFiLKT7Tt20FFSENHJFDR8bieCYKKZIoKlC2RxC+NwOAgEAqS/+Xj5KdDTP/h3
      knkNZ7CG97ztzYukEnA45t/2Ycelb613scWtgGmaZT2NC4KA3W7HGB0tbxJ5/4F9xJI5tJK1
      DWpx+7GUm31Jkgj8wifKv7Blu5N9u3eRzpdWvHEWFquFaZqUslkEUcTudl93FPDU15cXgLnp
      cYK1Lcixpf3630r80VO/S7aUXjLd77/zT3DZrNhcdxr5ySnif/hHCE4nkd/7H7hCoeumLysA
      mVyJwaFTtHd0rngjV5Px5CipYnLJdIZ5aZv1xf7neOLMvy+Z5+HOt/HOre++qfZZrC56MoGZ
      TGJKEkYuBzcqAI2N9ZybGaK/r4+utjvbM1ymmGY0ObxkulRhacGyWHvUTIbU959ArK3Ffdc+
      Ip/7IxAlnHV1110MQxkBME0Twe5GMhS8wWtNIi3m+a3/+OySgQAlUeRz7/7LNWrRxkQ730/+
      u98DQH30EUIf+yh6JsPcP38T+/ZtBPbsKSsEiwuAofOjJ39MbWM7Do97sSQWwGhyeGkBEG6N
      SCgbBeX4CWIjo1Asoo+OorxyGPdf/jl2u33R9GVOgmFT1zba2zsRxEV+QNNkePA8quDA7xQX
      9QvUtIgx/UZHN3S+fvQrS6azy3Y+fNd/Wf0G3SlcplZhZrPo8Tg4HIjV1dj27buu2sXiAiDK
      7Nq197p11tU3cH5ojIwhUe2CyZSCbI9fpgsUXCddoMoq03XtUl1mZXUZpnFlXRXe18U8mqHy
      VO8Plkzvsrn50O6fr6zw25CV1gWydW3G8RPvQrDZcN17gNwPfoh9xw68992LJEnLF4ClME2D
      7u4e2jZvZXJ0iLhi4LDfKrpAlVUmSfKluoTK6hIF8cq6BCoSgot5TL1yFZHL6ymqRRRdWTKP
      0+bELi0+1N/JyA4H0Z//z8B8f3B/6hevMIi/bt4bqlEQqK2toZDP097WSrao4XU5EAQT3RSx
      /AKtLN86/nWe7HliyXSfuPfTPLr5HQAkC0k+9+PfWzJPxF3Fb771UrrzsXPM5WeXzNcZ7SLs
      vnWmuZe/MJczutyQAAiCSE1dw8LnkKULdMuhG1pFwcnVq0aWH3X/By8PvbRkvs+++TfZ33If
      ADkly+mJk0vm8Tp8bK/btWS6tcTqrxY3TSw7w1+9+GdLpuuo2sz/qvvTNWhR5VgCYHHbYxgG
      uq6XvX49mxFLACxue3RdJ5/Pk8/ngfkOr+s6NpuNfD5PNBotKwCVbX9YWNziqKrKk08+ycTE
      BM8++yzPPPMMs7OzHD9+/LqRTm96BNA1FUUzsEsipighoqMZAnabNbhYrB3FYhHTNOnv719w
      gOvz+chms2VPgWEFBKD//Dk0RcfucGI43ThKKXKSl22bWpbObGGxAuRyOVKpFJFIBK/XS7FY
      pFQqMTk5ic/nW/mDsCsKsDuJ+mA8I2PTS+iCjF2q8OTLwmIFsNvtNDY20tTUdM21LVu2XNdp
      wk0LgMsuMZlRqYt4wFQoCXZrYWGxplzuB3S53LQA1DW2spjrrMujdHjtPvyOwJJlCYgL2pWy
      aKsoj0t2XaGR6XP4l9TQnG8gC+nskr2iuhyy44qyA47gknpEkigt5DFNs7J7sl15T07ZVVE+
      m2i/5AEZoaI8XrvvirpcNndF+WTxMj/8iBXl8di9l9pXgZrCWiCYFfWW5WMYBoZhVKzTc3m+
      5ea50Xy3el23evtupi5ZllEUZSF+13qxals1F5WRFrs50zRIJ+IoyETDwSuulctjGBqZTA5J
      tuFdxEZhsXyqUkLT59/QdocTSRSWzANg6BrpXAGn3YbT6bzm+mL5TNMkk0nj8/kXLXOxPKn4
      HHZvALOYoSQ4CPncS+aBeXuNdCa7rGcBUMznKKkabq8PmyRWlEcpFtCRcDkX30kply+dTuH1
      +RHLPItbhVWdri92o9n4FEeOHqe7f4hI6Nphs9zDiY0PcuLsOQYHByuuq1gokIjPMTc3tyAI
      ldQ1NjzA4PAIw0NDFdcFoBZyvHrkVYbGJivK4/a46T35Kr2js/jciwvaYiSnh3jtVC8Dy3gW
      AD2nXqOnp4eZxLUu78vlESWR8eE+jh0/SSKdqzifVirw2quvMjAyztVzjPUSgIuzksun52u+
      We8J1bC1U2ZsfJLZeIrqSHDJPKZh4AtW02bYUJfRZNnuwOXU0Jc5ywuHI6QLkzi8S89rL2di
      YpxwtJqA31dRekVRiNQ0giBSUjXkClSZTdPA5Y/S2SRR0pf3/qpv3sTMbAK/pzJvGKZpkErE
      ER1+trXWoKlLq2RfZG52hrbOrTjt834C1+udf7GjF4tFNE1biBIpyzJOp3PtN2xyiSlUwYmq
      KuRy+YrymIZGvqQgSjK+ZZhoulwu+nrPkkvGmE1X7uArkYhTXdtIIbu0e5XLEWQ7NdVV+L3e
      itJrqkK+UCCbTpKr1P+SaaKbAi63h1DQv6z2TY4NIogCqcy1b/JydSGIYKgkkmm8Fd4XQDo2
      xtTEGAUciOvU+zVNI51Ok0wmFwTgYiBtRVFIp9NrLwCCIDBwrpvGtk50tcIfXRCZHh0gp5iM
      j48vq77mtnYME1yOymOd1dY3MDk6gD9Utay6fB4Ps7FZKrV7sTucBINBvB5nxcEIBVFCzcWZ
      mIkzPnntVOt61DW0IIh2qiOVCY4gShRzKSZjceZmZ5ZRk0ltcydg4nOs/iTj4lv+8s+FQoFc
      LnddJTlYB2U42eEhEPATn5mmobmy02JRkuno2sLQ6DSB4PX9vFzN+MBZFDmIu/r6D+JyJsZG
      aWjZhHuRBfD1mBntoWivpbqpDXsFNhmSPL/I9gdCZReZi+ENRvEX43gXWTdcj8npaaJ1TZiG
      CRXajISqarG5AxTVyqeRuqZTLBZRdRF5jV7/mUwGu92OKIqoqkqpVNnLdc1HAIfbR1dXF52b
      WhkdXtoXz0WK+TwGwkLE70pp37qPmkiYoLvyDhYOBRkdHmR6dm5ZdTW2b8XrkCoe8u0OJ4FA
      YFmdHyCbjJHO5piYiS0rn8flYmJsDFWrzAYa4NzZk8wmMiSTiYrzpJNz5EoaAZ8bY3V22a9B
      0zTy+TzZbLbizg/rIAClfIa+vj4Ghoaprq2vOJ+hq5SU5QfCGBocwOX1LmvnYS6eQNV08pnU
      suqamY0TCAaQV/ml5/IG0DV1WeshAEU3aagOkc5XFvbKNHRqGlqJRkK0tVSu2xWqqkEp5tE1
      7ZodoFuNNZ8COdw+Ojsr2yW5iKGpxNMFXHaxslPeC8xOjSPJDkaHR/CFqrDLlcl7VbQWj7+E
      vszHUywUcXlWP1qNzellS2d72W3QxUjMxWhqbmV2ZoqIq7Kpk2maSDY7hq6hLTGXvpqW1nYy
      2QoX2+vIbaGzLMo2NnV2LTvfbCKJLOg01IRJZIp4HZXtYuQzceYKArXVy1sEy7K8JnvcSjHP
      XCJNIFh5HDa3y8UbJ0/gCtfTVOHCVJRkqqtrbqiNLreHQipOVtFx2m5d7bDbQgBulNqaGjK5
      AqYAUX9le99KLoHsr8VjxHDYl7feaGhuo7a29kaaWjGGVuJc/xCGruIvE8BwMRRVpbaxBUEU
      0XQDWVq9TplKpZAlgVB9K173rd3Fbu3W3STBcBXLeEkCoBUyDMcSFJNTuLwB3BVOFwBmJkdJ
      plK0d3RVtAt0I5iGga5rlEoKoWWonfsCIVxuLyVFuUYNYqUZPN+N2zf/4JvbOnDabh3Vh6u5
      owXgRnBFGtnqVYB6RGl5j0dJTyO7whR0Vk0AJLuLvXv33VDe3p4zBMNRIlEH0ioKQUPzJqLR
      6KqVv5LcupOzdUIQRJxOJ06nc9lmnaFILdl8kVtx1E/MTlMsaeSyGZRlbIPeCLdL5wdrBFgx
      BgcHERwebPkURR1utXWfy+Uik83gdsjkiyX8yzgXuR24nt3v9bAEYIXQlQKeQIR8rsCtaBHq
      cPvY3LEJyWYn6LuzXN4LgrAsPaUr8q6WQcxGwzQNkokETo8Pl+PWfLuWikXSc5OU7BEao8tT
      pFsN7miDmI2GIIiEwreOs9jFSCViJHI6rTWe9W7KLcMtNlO1WE1m5xI4JZ1EujJViI2AJQAb
      BF3T8Hk9xBJZvG7H0hk2CJYAbBAGBgewywIul5NMzhoBLmIJwAYh7PcwmzVoaai5ZRfp64G1
      C2Sxbli7QBYbHkWp3NB+NbBGAIsNjbUGsNjQWAJgsaGxBMBiQ2MJgMWGRvqDP/iDPwDANDn0
      /FOcOHWW3t5eBGeASHBpDbtceo5zgxNUV4XR1SIHX3iORBFqomEEYG5iiKefe5GJmQR19bXX
      N8UzDRKpFC6nk/MnXmFW9xK5ypRxcvg8Lx46jCcYxe9Znl8ci9Xh1YPP8vqJU/T29qJJLqrD
      S7uULOZSnD03RE11Faau8spLzzOVUqiviSAIApnZCZ58+jkGhsepqa3DYV/ZDcsffvdxIk1d
      V44AW3bsYebcMSLtu6mPBlFLBSYmp9ANE6WYJ5VKMTUdW3B1kZ0Z4H997nP86xMvzBf6+GMU
      nVGOPvltesfn/ciMdh8jLQQI2Qr8v3/7NUwgn0kRm0tgwnwd4+Pkiwq51DR/+md/xeR0jNj4
      AJOxOFPTMwu+ZWYGT/G1f/kxO3ftxFBLKKUCExPzeTFNErMzzMzGMU2TUiHH1MwshmliaCqT
      ExPWCegq0bl1J/mJHhzVnTTVVqEpRSYmJ1F1A00pkkqlmJy69Duq6Un+8P/+HN/4zg8BeOE/
      /olpzU/vy9/nWP+8B7rY0FnGcxIdDUH+6m+/AqZJOjlHPJkBWPhNi4qGrpaYnJhE0XRymRSK
      ZqCrJVKZPJpSZPJCHy4VcuQLRRLJFLv37cfjkC47BxAEItEa/F43VdEa3HaTv/izv2DT5k7G
      kzpv2xrg24dHaXDmCG99C+97eB/uSBO//zv/nb/54o8Ak7MD0/zqh/cwxDhvdA+wpeEuAAKh
      CHvu3c4Lz73I6OgA3/inf6cuZKP9nnfhK40zOpPgxJlBPvLBtzA3F+NMz3ncwGuHD3Ei2c++
      n/wED+5s5tWDB3n7+z5Ic1M1AMcPv8DoTIKTZwb5Lx94gMe+d5gt7U088vCb+NLff5WWxirs
      tTvQxl5D8zZQVV3D29/8pjXqFhuHUCRK0OclHK3G77bx13/+5zR1dDA0meanH+rii999lS21
      NoSa3Xz43Q8ie6L8wf/8v/iTP34MgGNnRvhvv/UR0jUlfvDGGe7qmPdEYRo6ilLC4XQx2nuU
      b/7odVxGhrd+6BM89+0vUd22lS3b9/DC979JXWsn50dmeXRXlGnnFuqKvYzb2ug//AMaWtpI
      ai7urjX4+lPH2LLrAPb4Wd7+879Wfg1Qmh1CqtnO+z/wM2Ri8x7cdu9/E//5ox9i4MxZAETJ
      doXPfVkEVTdRFBX7VR4VTNNE0WCs9ySzmTy5kkpfbw9D/ecZm5hienSc2vbNNDW38tY334cA
      HHjwUR66ZyfJzLw7b7fbSTZ70aGuyWB/H2MT08xMjuOOtlLtgeGRMSaGehmZipPOFRk418uu
      PfuIjQ8zHUtiWKceq4qWnqLoaeL97/9pzPwMimawfe9+PvyxDzPaPd9vBEnGdpnVkF0SUHQT
      RVGw2y6paYwPneOvv/D/8bGP/hxvvHaEvKKgaSXOdJ8ko/n54E+9j65mL3kzyPvf/wE8Spym
      ux7k3PHDHD0zyP7tUc52DzMXTzI00A/A3gffxSd/7t0AFHMz5U+CHdE2jJl/4zvfzhOoaQPg
      xJGDjL2WYc+DPwXA7PggLxx6kcH+bl46cpI337+Xr375H8jNTvLJX33nQlnHj7xI4twhGnbd
      z/YdbTz/2gANjW3Ut7dx8IljtG/fzeC5UZDsOPUMP3j6IIs5Tb/30Xfxv7/wNWb7N9PY3sXQ
      8Bjt2/cyPDBCNpXAX1VHpr8b/A0014SI1jTSWd1IMj1Hc0sz3efPY2Ct/FcTOVCLuzDGt7/9
      LURvHXZZ5MyxI3xl8AjbDzwCQCo2zvMvv8TIyHmefekob330Pr76d19BS03x4c/8xkJZ2/a+
      ibd86FE+//m/46PvuZczseO0tGxjc1sHs2eP8vh3/pWu7bvxSim+/Z3HyTurqPJFcCrT5Fx1
      RPxVbN/aQjhaQ11rEEheYa/s9ESvPQnOZ9PYXD5skoCqFEkkM0Sqqjh/+IecSAd42707CV9w
      y60U88ST8y7E7Q43oaCPVGIO2eldcNx6MY3d6SYU9CMAhVyGTL5EOBJGLxXIFTVskoDH70ct
      5MjkFXxuO8gOBF1BF2wL3p3n25QmGApjaiVyJQ2bKODxeUkl4giSg0DAh1rMk0hnCYUjiKZO
      PJHAHwjjXIaXaIvKKeQySA43dllCVxXmEinCkQhT3a/w4+4s7330AOFQAEEQUEtF5hJJYD7K
      aCQcJJ2YQ7S78V2IXaApRUq6gMdpJ5WM4/aHKOXSFBSDSCQEhsbsXIJAKIwsGEwMh6gAABO8
      SURBVMzFk4QiVdgkkXwujYEdr8eJppaIx5P4giEkU8MQbTjtNnKZNE6Pv3JViFRsnIzpobF6
      6YAWFhYXySdnmMlBa0P1ejdlUSxdIIsNjTUdttjQWAJgsaG5Zhdo5umXKcXi69GWNSfcFcVu
      JtelbjEYRtBWoW7ZgWmXQK0s/tpSiNU7Ebyr6/B3PblGAAa/8E8kjp5aj7asOTs+cQ8hs2dd
      6pa37EIsdK98we4wpt8J2eXFDyvLvb+BdAcLgDUFstjQlBUAR3UEQZawV4UI3rUDZ301tlAA
      R83ygkbcDsTzCqWrHMamiirx/Oqb62WLGk+fmWEyWT6M61z2xtrxxlAK0zQ5MZhEv+oIPJVX
      Fw0evtEoexLsbm9Cy+bwbetAtNvI9PTj29oBApSmZ9eyjavOeLqIUxYZThZoDroYTxexSQJV
      bjvn4zlcssTO2tVxJZjMK7RUuemdzJDMz4dKLao6oiCQK2lEvHYME2LpErFMiQe7Kn8B9Yxn
      CHttvNw7h9clMzyTpyHiQtdNBBHcdonhWJ6gx0YsrfDQtsrDSN0plL1bUZKQ3C7UeJL0G72E
      792Du6UeT3sTiHfeQ8qrOrvr/Iyni0TcdoJOG1OZEhPpIqemlxcwezmYJjxxYoqw1850qsjI
      XB6HLBLLlHDaJGKZEjPpEiPxPCdHlxe0r7nKxcGeOVqrPRwfSKLqBjZJ4NhgkmxBo38qxz0d
      IeIZhbqgk8QNjjS3M2VHgEzvAO6WetKn+wjs6iJ9+hxGScXQNESbjFG6cx5WU8CFCbhsIrtr
      /Qwn84Q9Dqo9DkZSBcKu1VOfiHjtfOLNrSRzCnZJpKDquB0S9UEnoigQdNvwOmXmsgrVvuV5
      dOus91ETcuJzykiiQM94BrdD4ifvqiVf0gm4bZwZTbOl0c9kokA0sPE8xpUVAGU2gTI7r9N/
      p+8KBS/r4E5ZInyZ7/xq7+p2CveFgHU+5/UNPqr9y29HxGcn4rt0L/d1XXLeG75g63RPx3wo
      o7rQxjQuKv/URQHJ6UTPF0AAZ101xYkZHLVRtHQGR3UEU9MpxeKYug6CgKmufojQ1aCo6Ywk
      CzQFXMzmFarcdkxAuPBPN03cNmlVHDhpusHwXJ66oIuxeB6PQ8Ztl1B1E79TxiaLKJqB6wZi
      Lk0ni4iCgM8lM5Mq0VTlIl3QcNklTNNE0008SwjenU7Zu/dsasERDRN/+Rj+HV2YmoY9EkLP
      5fFubiVz9jyBPVuwR4JIHheJ106vZbtXlJOTaUq6QbXHQUkzeGU0gd8hIwCKblDSDN7ctjqu
      z4uqgaabvNofp7PWy+mxNKpuYBhQG3SgGybb6v3LFgDTNCmpBscGkuxtDzASKyCKAk+fnOb+
      rVXMpIrYJJH9ncuMIniHUXY1m+sfWXiji3Yb2fPDCDYJR12U9MkeBFkid34EWyiA5HJiKuqa
      NXql2Vnrp8bjoD+eYySZZ3u1jxOTKUZTBbpjGcJu+6q573M7JKZTJXwumVReZW/LvLatbpqk
      CxqTyflry0UQhAUTRMMAuywyHMujGSbjcwVODKY27LTncso+WV9XG/ZoCN/WTeQGR4ncfxfZ
      88P4trRjCwVAgPzgGIaqYWo6tqAP9YK95u3GbK7EaKpAY8DJbF4hr2h8ZE8j01kFE5OcomOY
      JuIqCMFcVkE3TfwuG6YJUZ+diNdOSTVoqXITcNuYTBZpCFUW5/gipmkylSgS8toYmytgAvd0
      hOis8wACXQ1e5jIKjaa5rr4515tr1KGPfPCXr1j0CpI0P8e/A7FUIZZGuvc3kJruX5GybiVM
      06Q0nVjaOe6d2vktNiamaVIYizHzwyNk+8Yt79AWGwdTN4g98zqxZ45havMvdksALDYEpmEw
      8S8vkDhy5bTzztNpsLBYhMyZoWs6P1gCYLEB0HJFJv71pUWvWQJgcccz+/wJtHRu0WuWAFjc
      0ehFhcThM2WvWwJgcUeTPTeKni+VvW4JgMUdTWF4+rrXLQGwuKNR4uXVc+zRoCUAFnc2xnWU
      NGWP0xIAizsb0XZ9NXJLACzuaGzh8s4M8iPTlgBY3Nm4W+vKXzRMSxfIYu3QFI3EaIzZwWky
      0wnyyRxaSUWUROxuB56In1BjFdFNdXgivhWp07OpDtFpxygu7sTBEgCLVSeXyDJ0pJfREwOU
      MuUDFc4NzTDy+nkESSTUWEXbgS7qdzQjSsu3h76I7HER2NtJ4pXFD8MsAbBYNQxNp++lM5x/
      6QxaqXKTWVM3iA/PEB+e4fzBMDvfvZ9Iy40H2Ig+uo/0yfOLHohZawCLVSEXz3Dwy0/R8/SJ
      ZXX+q0lNxDn05SfpffYkpnFjrhztIR+173tg0WuWAFisOOmpBAe//CSJ0diKlGcaJj3PnOTk
      945g3mCYz+DeTnzb26753poCWawouXiGVx57hmJ6ZeITXM7w0T4EUWT3ew8smdY0TUq5GVJz
      3ZRyMyAIeB5tBGczmWMjcEGOLAGwWDE0ReO1b764Kp3/IkNHegnWhWm5p3PR66ahExs7xODJ
      r5GcPolhXDn9km1enK3N+GZ2I+cClgBYrBx9L5wiOT636vWc/uFrVHXU4Ql5r/heLaU4c/CP
      mex/koVX/FVoapas/Sy5xj4awu+31gAWK0MunqH/0Nk1qUsrqXQ/eeyK79RSmqM//AyT/T+i
      XOe/HBOVsfjjlgBYrAz9h86iq2vnQmfizDCZ2Ly7eNPQOf3SH5KaWb4TZ0sALG4ataQydnJw
      Tes0DZPh1/oAmBp8mqmBJ2+oHEsALG6a2PkJ1MLax4uYODWEYegMnPyHGy7DEgCLm2Z24PpW
      V6tFIV1gdqib9OyNrz0sAbC4adLTifWp2DQZOfXCNV9PzymMTZW4yu3thSwm+YJOoWh5hrNY
      IfKJ7LLS+6oDZGIpfNEgdo8DQ9VJTsxRvbmB6Z6xZZU1O9wLV3l57x8pUFJNFNUgV9AJ+GQS
      KQ2bTUDTTHwemUxOY1eX1xoBLG4etYyqcTnsLgcgYPc4kGQJQzfw14TQFQ1BXJ6rdl25ducp
      4JNprLETT2lsanIxPasyMFpEEAQ6W13ki5fyWCOAxU0jSRIalSu8qSWVcHMU0zBRckU8ER+G
      bqCrGv7aEKmJeMVleYKNFK7SkfO6JQpFg62b3DgcIvXVdqpCMrmCQTyl0VznwLRUISxWCofP
      SSlXPtD31aSnEkh2GV3REGWJ9HQS0zAxbyBYR82mexnq+yaXH3611F85J2qoKR9g0JoCWdw0
      nsjyg4jrynz4LUPTMXRjYcG62ML1elS3bSVYvXPZ9V/EEgCLmybcfOPGKjeDZJcJ1EXYtPeT
      N1yGJQAWN020o25d4oyFGquQHTaizQ9R3/GTN1TGhl4DiJvqkbaH1qVuUxTRuRvR24yhrkw8
      LwAEYT5ms9ly7SXZD6KAqVUezFAKLh0e1l8TxF+3vMXrStB8VwcAgiCy/cHfpZSPMTfx6rLK
      uEYAovu7cIdsi6W943CEDIxc7/o2wiahl/rXpCrBHgFRxFQrV1k29aX3+AVBoP1NWzn+nUM3
      07xl4Qp6qN8xL+S6rpPPq2y+748YPvW3TPR9D8zrm08ahohp7r5WAAKM4BbOrU6rbzEcBNa7
      CXcMjTtb6T90lvTk2pwKb37LTnrOnua1I4cZHhhEVefPIuwOB2Hvm6j29eN3zWHoV55R2JxB
      3L7d9J9IoRbFjT0FusjZwSQTsTytdV46mpa/o7ESZPMqM3MFnA6J+moPADNzBRCgOry8GMHr
      gShL7H7vAQ59+SkM/caM1yvFFnby4yNPMth//pprhXye8byN8ZktdHS28Na37kUW5i3UPMEW
      DN3HU1/9a9TivKuVsgIgRaoRHE60iZFFrwsuN5gmZrG8n5fbhVRWwWmX6BtN890XRtjbFWEu
      VaSuyo0sCdy9rQpZWt39AlUzGJnM0DuY4s331PHdZ4Z4xwNNpLIKyXQJVTXY3hle1TbcLOHm
      ara8dQ9nrzJWWUlUQeN07AS50uIRXy7nfN8wubzGxz/9GTweL7qm8qMv/Rm51KW1StlfVQyE
      EZxu5IZW5OYOpOp6bK2dSNX12LfsRnB7kZs7Vuau1hlJFNjWHmTHphAdTX5a6710tQTI5FXO
      jaTXrB1Bn4No2MnIZJb2Jj/pnEJznZcjJ6fpaLk9pmsdD26n/b4tq1K25JAZMkcq6vwXmRwf
      59++9S1M02T4zDGmh/quuF52BBB9AUxNnR8FJkeRwlHkhlZKJ17BSMlIkZobv5NbjLu2ViEK
      EPLZiQad2GwiArC1LYhhmEjL1E+5EYI+O4GuCFs3hZBEAd0wkSWBoqLT1RbEYb9x72hriSAI
      bP+Ju5FsMn0vnl6xcp1+N85tfuLPHll23u7Tpzh/rpfzR56/5lrZEcBIJcA00GcmMLIpTF1D
      j8eQahoQHA6MeAwjvjJ+X9YbSRQQhPl/ToeEJAqIooBNFnHYpTXZ4xaE+Toddgn5Qr2SJOJx
      2di/6/Z62YiiyNa372XfzzyAzWW/6fKiHfU8+IvvpG/kxjZnTNPklReeJzZ6rdVa2RFAHbqy
      Mm342gXHncJsssjp/gR7uyKcHUyyf3uUo2dnqa9yYbdJFEoarXXeVRUEXTd59dQ09+6u4dS5
      OB6XTDavomoGjbVe3E4ZRdWpCt36C2KYF+imPe1Ud9TR/fRJRo/3Y2jLsxn21QTpengX9dtb
      0HSN4cHFzS7tDsf8ehTQVBW7w0GpeKVu0kDfOZrFa10jWrtAgN9jo7Haw9hMjlxBQ9dNwn47
      03MF+kYzbG0LwHW8bK8EiqaTyalk8xonume5a0eUsekcNREXfUMp0jmFdz7QtLqNWAUcXhe7
      33eArod3Mn5qiInTwyTH58p6eLN7nFR31NGwq5XqzQ2I4vwkJZNIoevaNelFUaSuvh7TNNF1
      A0EQSCbi1wiApmmwyGBUVgBsnTtAVzFLRURvAC02ia2tC7W/GzEQQnR5UHpOLudZ3LKMTudR
      dYNtbUHSORUTk4DHzsB4htqIi0zuxn1bVorLIeNyyIgitDb4iMULHNhVw/HuWXxuG26nTFHR
      8bhuP+0VQRBwBTx0PLCdTfdvQyupZGNpipk8akFBEAUcXieuoBdP2IsgiteMttfXkZtPK4oi
      4UiEqYnxRdsgihKGceUoVH4btKoa1Pkf3sjnEL1+zFwGKVKDrW0zxeMvV3j7tz52WWQ8lsPr
      sqGoBkMTWQpFjQPbo4iigKoZmOa8lsFqkUyX0A2TmbkCDTUePC4b6axCe6OPqpALj0smk1Px
      3B4zoLIIgoDNaSfUVLWsfD6/H1EUMa5ykGsYBoahIwgiyUScyfEx/IEA8bkrT7sdbg/BaJD4
      Vdv6ZQVAn5lEcHsw5mKIoSrQtXkdk1Ke0unXkIIRjLmZZd3ErUpTrYem2vnDp6Yaz7q0Ieh3
      8Jb99ddNEwqU12u/07HZbDS1tCy6DhgdHr7i89WdH6C1vZ22ttrKBUDt7770YeJCBeOXKlo7
      F0gWFvMjx90H7iu7EF6Kuw7cS3tbG90vP0M+nVz4/vabUFpsWPbcfTcNTcvfCOjs2kLX1m04
      3B4e+JlPXBFxxhIAi9sGSZL42Y9+DJ+/cn2tSDTKB3/uwwu7SQ2d23noP/0Ckjyv8WwJgMVt
      RThSxX/75V+loXHpkaBtUwef/Mwv4w9cUiMRBIG2Xfv5yc/8DjVtm61zgPVGkD2I9q41qsuP
      URhak7pWC0EQiESjfOrXPsvx11/jtcOHGRsZXtgdkmSZltZW7rnvfnbu2bPw5r+6jKqGFn7i
      F39zYwuA4Iwghp1LJ1xNbC6M9PK9Gt8Igi2yunu5a4gky9x94F7u2n8ARVHIpNMIAvj8AWw2
      W0Wn9oKwwe0BDC0B+eGlE64ionx7KLndqgiCgMPhwBGN3lB+aw1wi1AsafMGMJcxGVta7bdQ
      0sgXrlURsKiMDT0CXGR8JkdtxMX4TB6bLKKoOg01nlU3grmcQklndDLLkZPT1Nd4yBdUYvEC
      rQ1+ZhNFIiEn8WSRlgYfY5NZIiEn03MFutqCCMDAG2naGv20NKxMhPWNgjUCAGNTOTTdZHgi
      w6unZxiZzK6JDcDVGKZJW5MfTTOQJZFo2EUqo1AVdpJMl9i7LcqxMzHSORVRFDANk4mZHEPj
      GWKJIr1DyaUrsbgCawQAZEkgm1fRdJOaiItMdvWV367G67axuTWIJAkYhslsogAIBH12ZuIF
      OpoDOB0S7364lZ7+BE21XkqKzpb2EIZh0j+SorVhfeyZb2csAQD2bK3i2JkYB3ZWo10w6FY1
      A7tt7RaoNlkk4Lukr+v3Xvo7HLy0U2W3Sdy9c94T2907Lnlk27vtxhaBGx1LAJi3CLtn5/q4
      97ucmbkC0bBzwSCmOuxifDpHY60Xp2PeMMfnuXkLK4tLWGuAC8zEC6SyCi+fmGJgNM2RN6YZ
      nsiQzask04tHG1lJcnmVHx8aRdUMjp+NEfQ7+NHBUUqKTu9ggldOTCMtcqhjcXNYTxSYTRQ5
      +PoUfo+N7ZvCJDIltrSFmEuWONkzxxvnVt/ln8dto7nei00W+fC7N/PqGzO4HBLZvMpsskg8
      WcThsM4MVhpLAICqkJNo2IkgCJztT7Brc4ShiQy7NofpG0nh81R2sngzJNMlkmmFvuEULx+f
      orXBx6bmAJIksKMzwiP3NTIzm1/VNmxErDUAMBnLk8woTM3mqYu6scki7Y0+ZFnk7W9qJF/U
      MAwTcRW3RoN+B+95pBWAza3BRdP4PBvDZ+ta8v8DKGJrKJ/Dk4oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Death Cases' width='192'>
      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
      mbO2nT58nK6nnmbhVx+g62+eJvtxz1y9NfEJWmvckyd2QykUkAhbhCwDDWRKLj/5oA+lpq4M
      /XJOb08qT7JQ4jvbjgEwmi0xnC1hGYon1neglCIRDrBpST3ffbeLH7x/gq9e2VrWaNA5C4Cb
      y1McGKFm/RqyR7sxQkGqrlpBcucHoDWJVcvI9QyQ2n3gnFdvogubCVRXMvTS1k/dR/rgMZLv
      HaDxvo30/P1z2ONnd6DE7HO1ZkdvkmTe5sb2WkKmwVtdY2g0lSGLo2MZ0kWH31zdyunzwO5Y
      vIA7Fi+Y/vvWrjHeOD7Kt25aQsgy2HkiCUDIMnj8ylb++5ajbOkc484l9Vi/YkbZpykvAIai
      7qZrWPiVB7ASFUSa66nfdAPOZIZjf/Z90kc6aXlkE2Nv7yF98Bhj7+wh3NzAqv/9bbTrMfz6
      dib2HJi6P3D1SqqvXUXLFzdNb35izwE6v/tjnEyexJrl5Lr7KY6Of2ZJw6++TeuX76b+9usZ
      eP716Yk2Yu4YStEYD7Ota5yndnVT8jQLExG+cmUriXCALZ1jPHOgn5ePDmMairBl8Pvr2rhr
      aT2WcX5XdKrDAX5zVQvPHhiguTLM6sZK1AU8HaLs+QDKNFCWNXWB/jTadam9/ipily6k75mX
      ppst0+sDnu1MP/5EBSyUaX5iGx7atqd/T2vOflyKmnqynD7tioEyDUDJE+Zm2WfNB9Ba43hT
      PwCmUljmVHPI1Rrb1dPdNAUETIWp1BkHsetpPK2xjKnXHU+jANNQ030Lx9OYSmEoLigAZTeB
      tOuh3bM/ZVXAojQxSfbVt89os3/a+tp20Lbzmfs59wLOOPg/c10xZ5RSBExFwDx7maUU53Pp
      3jQU5mmNpNObOepk3yJoXvgzgWAW+wDadpjcJ9fjxeebDIYTviYBEL4mARC+JgEQviYBEL4m
      ARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQ
      viYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4m
      ARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQ
      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
    </thumbnail>
    <thumbnail height='192' name='Dual Axis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mortality Rate' width='192'>
      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
      6y3jpgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Recovery Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29V3Bc6ZXn+bv35k2fSCQS3gMkAZAEQW+qiiyynEpSqVRyLW1r1K3u3tmd
      2OjY2YmJ2NiY2H3ol441D7O7D7sdO7Ez6pBr1Uhd3SuVVCrLKha9NyAJEN4j4TKRPm9esw9J
      BwIgXCITJO7vCci8ee8B8vt/7pzvHMEwDAMTk02KmG8DTEzyiSkAk02NKQCTTY0pAJNNjSkA
      k02NKQCTTY0pAJNNjSkAk02NKQCTTY0pAJNNjSkAk02NKQCTTY0pAJNNjSkAk02NKQCTTY0p
      AJNNjSkAk02NKQCTTY0pAJNNjSkAk02NKQCTTY0pAJNNjSkAk02NKQCTTY0pAJNNjSkAk02N
      KQCTTY0pAJNNjSkAk02NKQCTTY0pAJNNjSXfBphkB0M30JU0hqqhqxrcL/sgWCRE2YJkt+bZ
      wo2JKYBnFF1RUaNxUoEg8f5xkmPTqJEEupJGTyo8qHoiyhYkhxWLx4mtrAh7uQ9nfQUWjxPR
      an79glkh5tnBMAzSoSixnlFCVzpJBYKo4fjD3n65WAqc2EoKcTfX4t27FbnQgyAK62T1xsYU
      wDOAYRgo02FClzsJXekkHYxAlr41udCNu6WWohdbsVf4N50QTAFscNR4kukvbxG6dJd0MLpu
      z5Gcdope3Inv8A6sRZ51e85GwxTABsUwDGI9o0x+dJlY70jWevylsJYUUvHOS7ibahCk53+T
      0BTABkRXVGbO3Wbyk8to8VTOny/aZPzH2ih5bR+iVc7583OJKYANhpZUCPzxIsFztzFULX+G
      CAKe1noqv30M2evOnx3rjCmADYSWVBh97xSzV+/lbMqzFO7mGqq+/wpy4fMpgud/kveMYBgG
      M2faN1TjB4h2DjHy68/Rkkq+TVkXTAFsENTZGMFLHRuq8T8g2jHI+G/PoKfVfJuSdUwBbAB0
      Jc3Ib75AmQzl25RFCV7sIHS5E0PfgApdA6YA8oxhGEyfaSd6dyDfpjwdwyDwh/OkAjP5tiSr
      mALIM6mJEJMfX863GctCi6cYfe/UczUVMgWQZyY+uICeSufbjGUT7x0j1jWcbzOyhimAPJIY
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Confirmed Cases' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
